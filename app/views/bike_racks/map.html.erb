<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=geometry"></script>

<%= render 'shared/nav'%>



<div class="row"><!-- input-group -->
    <div class="col-md-5 col-md-offset-4">
    <div div="panel">
        <div class="input-group">
            <span class="input-group-btn">
            <button class="btn btn-default" type="button" onclick="codeAddress()">Find bike racks!</button>
            </span>
            <input id="address" class="form-control" placeholder="Enter address in Vancouver BC...">
        </div><!-- /input-group -->
      </div>
    </div>
  </div>

<div id="map-container">
  <div id="map"></div>
</div>



<script>
var geocoder;
var map;
var bikeRacks = [];
var br = (<%=raw  @bike_racks.to_json %>);
var myLatLng = new google.maps.LatLng(49.279621, -123.125496);
var myBounds = new google.maps.LatLngBounds(
		      new google.maps.LatLng(49.195335, -123.244972),
		      new google.maps.LatLng(49.292609, -122.965508));

function initialize() {
  geocoder = new google.maps.Geocoder();
    map = new google.maps.Map(document.getElementById('map'), {
    zoom: 11,
    center: myLatLng,
    mapTypeId: google.maps.MapTypeId.TERRAIN
  });


  // var rectangle = new google.maps.Rectangle({
  //   strokeColor: '#FF0000',
  //   strokeOpacity: 0.8,
  //   strokeWeight: 2,
  //   fillColor: '#FF0000',
  //   fillOpacity: 0.35,
  //   map: map,
  //   bounds: myBounds
  // });
}

function computeDistance(pt1, pt2){
	return google.maps.geometry.spherical.computeDistanceBetween(pt1, pt2);
};


  function codeAddress() {
  var address = document.getElementById('address').value;
  geocoder.geocode( { 'address': address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
    	if(myBounds.contains(results[0].geometry.location)){
	      map.setCenter(results[0].geometry.location);
	      
	      var counter = 0;
	      var radius = 1000;

	      for(i = 0; i < br.length; i++) {
	      	
	      	var bikeRack = br[i];
	      	var rackLatLng = new google.maps.LatLng(bikeRack.latitude, bikeRack.longitude);
	      	if(computeDistance(results[0].geometry.location, rackLatLng) < radius){
	      		counter++;
	      		var marker = new google.maps.Marker({
	      			map: map,
	      			position: rackLatLng, 
	      		});
	      	}
	      }
	      if (counter == 0){
	      	alert("No bike racks in this location...")
	      }

	  } else {
	  	alert("Sorry, we don't cover this area.... yet!");
	  }
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}

google.maps.event.addDomListener(window, 'load', initialize);


    </script>

