<meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=geometry"></script>

<%= render 'shared/nav'%>





  <div class="row"><!-- input-group -->
  	<div class="col-md-5 col-md-offset-4">
		<div div="panel">
    		<div class="input-group">
      			<span class="input-group-btn">
        		<button class="btn btn-default" type="button" onclick="codeAddress()">Find water fountains!</button>
      			</span>
              <form onsubmit="codeAddress(); return false">
      			   <input id="address" class="form-control" placeholder="Enter address in Vancouver BC...">
              </form>
    		</div><!-- /input-group -->
    	</div>
  	</div>
  </div>

<div id="map-container">
  <div id="map"></div>
</div>

<script>
var geocoder;
var map;
var markers = [];
var wf = (<%=raw  @water_fountains.to_json %>);
var myLatLng = new google.maps.LatLng(49.279621, -123.125496);
var myBounds = new google.maps.LatLngBounds(
		      new google.maps.LatLng(49.195335, -123.244972),
		      new google.maps.LatLng(49.292609, -122.965508));
var infowindow = new google.maps.InfoWindow();



function initialize() {
  geocoder = new google.maps.Geocoder();
    map = new google.maps.Map(document.getElementById('map'), {
    zoom: 11,
    center: myLatLng,
    mapTypeId: google.maps.MapTypeId.TERRAIN
  });

 // google.maps.event.addListener(map, 'click', function(event);
}

function computeDistance(pt1, pt2){
	return google.maps.geometry.spherical.computeDistanceBetween(pt1, pt2);
};

// Deletes all markers in the array by removing references to them.
  function deleteMarkers() {
        //Loop through all the markers and remove
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
        markers = [];
    };

//The following js functions are based on the Google Maps API Samples
  function codeAddress() {
    deleteMarkers();
  var address = document.getElementById('address').value;
  geocoder.geocode( { 'address': address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK) {
    	if(myBounds.contains(results[0].geometry.location)){
	      map.setCenter(results[0].geometry.location);
        map.setZoom(14);
	      
	      var counter = 0;
	      var radius = 1000;

	      for(i = 0; i < wf.length; i++) {
	      	var fountain = wf[i];
          var str = fountain.location;
          var fountainlocation = str.substring(str.indexOf(":") + 1);
	      	var fountainLatLng = new google.maps.LatLng(fountain.lat, fountain.lon);
	      	if(computeDistance(results[0].geometry.location, fountainLatLng) < radius){
	      	  counter++;
	      		var marker = new google.maps.Marker({
	      			map: map,
	      			position: fountainLatLng,
              info: fountainlocation
	      		});

            markers.push(marker);

            google.maps.event.addListener(marker, 'click', function() {
              infowindow.setContent('<p>Fountain Location: '+ this.info +'</p>' +
                '<row> <button onclick="myFunction()">Favourite</button> <button onclick="myFunction()">Tweet</button></row>');
              infowindow.open(map, this);
            });

	      	}
	      }
	      if(counter == 0){
	        alert("No water fountains in this location");
	      }

	  } else {
	  	alert("Sorry, we don't cover this area.... yet!");
	  }
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
    }
  });
}

google.maps.event.addDomListener(window, 'load', initialize);


    </script>
 


